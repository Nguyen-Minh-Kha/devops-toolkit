name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push: # Renamed job for clarity
    runs-on: ubuntu-latest
    # Grant permissions for the GITHUB_TOKEN to push to GHCR
    permissions:
      contents: read      # To checkout the code
      packages: write     # To push Docker images to GHCR

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Docker meta # Extract tags and labels for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        # Images syntax: registry/owner/repository
        # ghcr.io is the registry
        # github.repository_owner is your GitHub username or org name
        # github.event.repository.name could be used, but github.repository includes owner/repo
        # We lowercase the repository name as GHCR requires it
        images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
        tags: |
          # Create a tag based on the short git sha
          type=sha,prefix=,suffix=,format=short
          # If it's a push to the main branch, also tag as latest
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        # Use the automatically generated GITHUB_TOKEN for authentication
        username: ${{ github.actor }} # Typically your GitHub username
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: . # Build context is the current directory
        file: ./Dockerfile # Path to the Dockerfile
        # Only push if the event is a push to the default branch (main)
        # Build will still happen on PRs for validation
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        # Use the tags and labels generated by the metadata action
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Enable build cache for faster builds
        cache-from: type=gha
        cache-to: type=gha,mode=max